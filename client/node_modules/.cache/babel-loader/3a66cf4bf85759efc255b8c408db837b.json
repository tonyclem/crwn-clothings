{"ast":null,"code":"import ShopActionTypes from \"./shop.types\"; // import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n// export const fetchCollectionsStart = () => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START \n// });\n\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap\n}); // export const fetchCollectionsFailure = errorMessage => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n//     payload: errorMessage\n// })\n// export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//         const collectionRef = firestore.collection('collections');\n//         dispatch(fetchCollectionsStart());\n//         collectionRef.get().then(snapshot => {\n//             const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//             dispatch(fetchCollectionsSuccess(collectionsMap));  \n//         }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n//     }\n// }","map":{"version":3,"sources":["/Users/clementanthony/Documents/react-course/crwn-clothings/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","updateCollections","collectionsMap","type","UPDATE_COLLECTIONS","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,iBAAiB,GAAGC,cAAc,KAAK;AAChDC,EAAAA,IAAI,EAAEH,eAAe,CAACI,kBAD0B;AAEhDC,EAAAA,OAAO,EAAEH;AAFuC,CAAL,CAAxC,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\n// import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\n// export const fetchCollectionsStart = () => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START \n// });\n\nexport const updateCollections = collectionsMap => ({\n    type: ShopActionTypes.UPDATE_COLLECTIONS,\n    payload: collectionsMap\n})\n\n// export const fetchCollectionsFailure = errorMessage => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n//     payload: errorMessage\n// })\n\n// export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n\n//         const collectionRef = firestore.collection('collections');\n//         dispatch(fetchCollectionsStart());\n\n\n//         collectionRef.get().then(snapshot => {\n//             const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//             dispatch(fetchCollectionsSuccess(collectionsMap));  \n//         }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n//     }\n// }"]},"metadata":{},"sourceType":"module"}