{"ast":null,"code":"var _jsxFileName = \"/Users/clementanthony/Documents/react-course/crwn-clothings/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetchingCollections\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isFetchingCollections,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isFetchingCollections,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/clementanthony/Documents/react-course/crwn-clothings/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isFetchingCollections","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,OAAOC,WAAP,MAAwB,uDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;MAAMK,yB;;AACN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAGnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEP,MAAAA;AAAF,QAAgC,KAAKQ,KAA3C;AAEAR,IAAAA,0BAA0B;AAC7B;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAGC,MAAAA,KAAH;AAAUC,MAAAA;AAAV,QAAoC,KAAKH,KAA/C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAqC,QAAA,MAAM,EAAGJ,KAAK,iBAAK,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,qBAA3C;AAAA,aAAsEH;AAAtE;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGJ,KAAK,iBAAK,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,qBAAtC;AAAA,aAAiEH;AAAjE;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AApBkC;;AAqBtC;AAED,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,qBAAqB,EAAEV;AADsB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAAEgB,eAAF,EAAmBC,kBAAnB,CAAP,CAA+CT,QAA/C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component { \n    \n\n    componentDidMount(){\n        const { fetchCollectionsStartAsync } =this.props;\n\n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const {  match, isFetchingCollections } = this.props;\n      \n        return(\n            <div className=\"shop-page\">\n                <Route exact path={`${match.path}` } render={ props => (<CollectionsOverviewWithSpinner isLoading={isFetchingCollections} {...props} />)}  />\n\n                <Route path={`${match.path}/:collectionId`} render={ props => (<CollectionPageWithSpinner isLoading={isFetchingCollections} {...props} /> )}\n                />\n            </div>\n        )\n    };\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isFetchingCollections: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\n  \nexport default connect( mapStateToProps, mapDispatchToProps )(ShopPage);\n\n\n"]},"metadata":{},"sourceType":"module"}