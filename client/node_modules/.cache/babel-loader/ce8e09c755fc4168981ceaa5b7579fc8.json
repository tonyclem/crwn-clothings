{"ast":null,"code":"var _jsxFileName = \"/Users/clementanthony/Documents/react-course/crwn-clothings/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage); // import React from \"react\";\n// import { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n// import CollectionsOverviewContainer from '../../components/collection-overview/collections-overview.container';\n// import  CollectionPageContainer from \"../collection/collection.container\";\n// class ShopPage extends React.Component { \n//     componentDidMount(){\n//        const  { fetchCollectionsStartAsync } = this.props;\n//        fetchCollectionsStartAsync(); \n//     }\n//     render() {\n//         const {  match } = this.props;\n//         return(\n//             <div className=\"shop-page\">\n//                 <Route exact path={`${match.path}` } component={CollectionsOverviewContainer } />\n//                 <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer }\n//                 />\n//             </div>\n//         )\n//     };\n// }\n// const mapDispatchToProps = dispatch => ({\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// });\n// export default connect( null, mapDispatchToProps )(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/clementanthony/Documents/react-course/crwn-clothings/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;AAEA,OAAOC,WAAP,MAAwB,uDAAxB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAGA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;KAAME,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;MAAME,yB;;AACN,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAGnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AACAX,IAAAA,0BAA0B;AAC7B;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAGC,MAAAA,KAAH;AAAUC,MAAAA,oBAAV;AAAgCC,MAAAA;AAAhC,QAAwD,KAAKJ,KAAnE;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAqC,QAAA,MAAM,EAAGL,KAAK,iBAAK,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAqEH;AAArE;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGL,KAAK,iBAAK,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACI,mBAAvC;AAAA,aAAgEJ;AAAhE;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnBkC;;AAsBvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEb,0BADuB;AAE7Cc,EAAAA,mBAAmB,EAAEb;AAFwB,CAAD,CAAhD;;AAMA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B,CADN,CAEpC;;AAFoC,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAAEmB,eAAF,EAAmBC,kBAAnB,CAAP,CAA+CV,QAA/C,CAAf,C,CAIA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA","sourcesContent":["import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\n\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from \"../collection/collection.component\";\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component { \n    \n   \n    componentDidMount(){\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const {  match, isCollectionFetching, isCollectionsLoaded } = this.props;\n       \n        return(\n            <div className=\"shop-page\">\n                <Route exact path={`${match.path}` } render={ props => (<CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />)}  />\n\n                <Route path={`${match.path}/:collectionId`} render={ props => (<CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} /> )}\n                />\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect( mapStateToProps, mapDispatchToProps )(ShopPage);\n\n\n\n// import React from \"react\";\n// import { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\n\n// import CollectionsOverviewContainer from '../../components/collection-overview/collections-overview.container';\n// import  CollectionPageContainer from \"../collection/collection.container\";\n\n// class ShopPage extends React.Component { \n   \n//     componentDidMount(){\n//        const  { fetchCollectionsStartAsync } = this.props;\n//        fetchCollectionsStartAsync(); \n        \n//     }\n\n//     render() {\n//         const {  match } = this.props;\n       \n//         return(\n//             <div className=\"shop-page\">\n//                 <Route exact path={`${match.path}` } component={CollectionsOverviewContainer } />\n\n//                 <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer }\n//                 />\n//             </div>\n//         )\n//     };\n// }\n\n// const mapDispatchToProps = dispatch => ({\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// });\n\n  \n// export default connect( null, mapDispatchToProps )(ShopPage);"]},"metadata":{},"sourceType":"module"}